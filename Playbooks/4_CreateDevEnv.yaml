---
- name: Spin up dev env
  hosts: localhost
  gather_facts: true
  collections:
    - purestorage.flasharray
  vars_files:
    - testdrive_vars.yaml
  
  tasks:
    - name: Unmount file systems
      mount:
       path: "{{ dev_mount_path }}"
       state: unmounted  

    - name: Take backup snap
      purefa_snap:
        name: mig-pod::ansible-src
        suffix: snap
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}" 
        state: present

    - name: Create a R/W clone
      purefa_snap:
        name: mig-pod::ansible-src
        suffix: snap
        target: ansible-tgt
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
        state: copy
    
    - name: Overwrite to mounted copy
      purefa_snap:
        name: mig-pod::ansible-src
        suffix: snap
        target: ansible-tgt
        overwrite: true
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
        state: copy

    - name: Map copy to linux host
      purefa_host:
        host: "{{ ansible_hostname }}"
        volume: ansible-tgt
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
    
    - name: Rescan
      command: /usr/bin/scsi-rescan        
    
    - name: Gather volume info
      purefa_info:
        gather_subset:
        - volumes
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
      register: volumes_data
    - set_fact: 
        volume_serial: "{{ volumes_data.purefa_info.volumes[target_vol].serial }}"


    - name: Mount /dev/ansible-test
      mount:
        path: "{{ dev_mount_path }}"
        src: "{{ volume_serial }}"
        fstype: ext4
        state: mounted

    - name: Delete and eradicate snapshot dev-snap.snap
      purefa_snap:
        name: mig-pod::ansible-src
        suffix: snap
        eradicate: true
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
        state: absent
...
