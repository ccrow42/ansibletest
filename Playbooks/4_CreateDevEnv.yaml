---
- name: Spin up dev env
  hosts: localhost
  gather_facts: true
  collections:
    - purestorage.flasharray
  vars_files:
    - testdrive_vars.yaml
  
  tasks:
    - name: Unmount file systems
      mount:
       path: "{{ dev_mount_path }}"
       state: unmounted  

    - name: Take backup snap
      purefa_snap:
        name: mig-pod::ansible-src
        suffix: snap
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}" 
        state: present

    - name: Create a R/W clone
      purefa_snap:
        name: mig-pod::ansible-src
        suffix: snap
        target: ansible-tgt
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
        state: copy
    
    - name: Overwrite to mounted copy
      purefa_snap:
        name: mig-pod::ansible-src
        suffix: snap
        target: ansible-tgt
        overwrite: true
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
        state: copy

    - name: Map copy to linux host
      purefa_host:
        host: "{{ ansible_hostname }}"
        volume: ansible-tgt
        fa_url: "{{ fa1_ip }}"
        api_token: "{{ fa1_token }}"
    
    - name: Rescan
      command: /usr/bin/scsi-rescan        
   
    - name: Get multipath device for migration volume
      shell:
          cmd: /usr/sbin/multipath -ll |grep -i {{ volume_serial }}| awk '{print $2}'
      register: mpath_dev
 
    - name: Mount the Dev volume
      mount:
         path: "{{ dev_mount_path }}"
         fstype: ext4
         src: '/dev/{{ mpath_dev.stdout }}'
         state: mounted
     
     - name: Delete and eradicate snapshot dev-snap.snap
       purefa_snap:
         name: mig-pod::ansible-src
         suffix: snap
         eradicate: true
         fa_url: "{{ fa1_ip }}"
         api_token: "{{ fa1_token }}"
         state: absent
...
